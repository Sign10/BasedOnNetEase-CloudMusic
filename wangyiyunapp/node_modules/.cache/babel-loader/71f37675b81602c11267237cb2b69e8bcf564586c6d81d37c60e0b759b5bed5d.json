{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-87535efc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"searchTop\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"use\", {\n  \"xlink:href\": \"#icon-zuojiantou\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_2];\nconst _hoisted_4 = {\n  class: \"searchHistory\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"searchSpan\"\n}, \"历史\", -1 /* HOISTED */));\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"use\", {\n  \"xlink:href\": \"#icon-shanchu\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_8 = [_hoisted_7];\nconst _hoisted_9 = {\n  class: \"itemList\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  class: \"leftSpan\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" 搜索栏 \"), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 点击该按钮返回上一级路由 \"), (_openBlock(), _createElementBlock(\"svg\", {\n    class: \"icon\",\n    \"aria-hidden\": \"true\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.go(-1))\n  }, _hoisted_3)), _createCommentVNode(\" 调用enterKey函数，获取搜索的结果 \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"結束バンド\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.searchKey = $event),\n    onKeydown: _cache[2] || (_cache[2] = _withKeys((...args) => $options.enterKey && $options.enterKey(...args), [\"enter\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.searchKey]])]), _createCommentVNode(\" 搜索历史 \"), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createCommentVNode(\" v-for获取存放在keyWord的搜索历史 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.keyWordList, item => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: item,\n      class: \"spanKey\",\n      onClick: $event => $options.searchHistory(item)\n    }, _toDisplayString(item), 9 /* TEXT, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(), _createElementBlock(\"svg\", {\n    class: \"icon\",\n    \"aria-hidden\": \"true\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.deleteHistory && $options.deleteHistory(...args))\n  }, _hoisted_8))]), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.searchList, (item, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"item\",\n      key: item\n    }, [_createElementVNode(\"div\", {\n      class: \"itemLeft\",\n      onClick: $event => $options.updateIndex(item)\n    }, [_createElementVNode(\"span\", _hoisted_11, _toDisplayString(i + 1), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, _toDisplayString(item.name), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.ar, (item1, idx) => {\n      return _openBlock(), _createElementBlock(\"span\", {\n        key: item1,\n        class: \"singer\"\n      }, _toDisplayString(item1.name) + \"  \" + _toDisplayString(idx === item.ar.length - 1 ? \"\" : '/') + \"  \", 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])], 8 /* PROPS */, _hoisted_10)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_2","_hoisted_7","_createElementBlock","_createCommentVNode","_hoisted_1","onClick","_cache","$event","_ctx","$router","go","type","placeholder","$data","searchKey","onKeydown","_withKeys","args","$options","enterKey","_hoisted_4","_hoisted_5","_Fragment","_renderList","keyWordList","item","key","searchHistory","_hoisted_6","deleteHistory","_hoisted_9","searchList","i","updateIndex","_hoisted_11","_toDisplayString","name","ar","item1","idx","length"],"sources":["D:\\桌面\\vue项目\\wangyiyunapp\\src\\views\\SearCh.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- 搜索栏 -->\r\n        <div class=\"searchTop\">\r\n            <!-- 点击该按钮返回上一级路由 -->\r\n            <svg class=\"icon\" aria-hidden=\"true\" @click=\"$router.go(-1)\">\r\n                <use xlink:href=\"#icon-zuojiantou\"></use>\r\n            </svg>\r\n            <!-- 调用enterKey函数，获取搜索的结果 -->\r\n            <input type=\"text\" placeholder=\"結束バンド\" v-model=\"searchKey\" @keydown.enter=\"enterKey\">\r\n        </div>\r\n            <!-- 搜索历史 -->\r\n        <div class=\"searchHistory\">\r\n            <span class=\"searchSpan\">历史</span>\r\n            <!-- v-for获取存放在keyWord的搜索历史 -->\r\n            <span v-for=\"item in keyWordList\" :key='item' class=\"spanKey\" @click=\"searchHistory(item)\">\r\n                {{ item }}\r\n            </span>\r\n            <svg class=\"icon\" aria-hidden=\"true\" @click=\"deleteHistory\">\r\n                <use xlink:href=\"#icon-shanchu\"></use>\r\n            </svg>\r\n        </div>\r\n        <div class=\"itemList\">\r\n            <div class=\"item\" v-for=\"(item, i) in searchList\" :key=\"item\">\r\n                <div class=\"itemLeft\" @click=\"updateIndex(item)\">\r\n                    <span class=\"leftSpan\">{{ i + 1 }}</span>\r\n                    <div>\r\n                        <p>{{ item.name }}</p>\r\n                        <span v-for=\"(item1, idx) in item.ar\" :key=\"item1\" class=\"singer\">\r\n                            {{ item1.name }}&nbsp;\r\n                            {{ idx === item.ar.length - 1 ? \"\" : '/' }}&nbsp;\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { getSearchBanner } from '@/requests/api/home'\r\nexport default {\r\n    data() {\r\n        return {\r\n            //搜索记录\r\n            keyWordList: [],\r\n            //当前搜索的额内容\r\n            searchKey: '',\r\n            //搜索结果\r\n            searchList: []\r\n        }\r\n    },\r\n    mounted() {\r\n        //从locakStorage中调用存放的keyWord的内容，防止页面关闭后历史记录销售\r\n        this.keyWordList = JSON.parse(localStorage.getItem('keyWordList')) || []\r\n    },\r\n    methods: {\r\n        //async获取搜索信息\r\n        async enterKey() {\r\n            //如果搜索栏不为空\r\n            if (this.searchKey !== '') {\r\n                //为搜索历史记录的头添加当前搜索的内容\r\n                this.keyWordList.unshift(this.searchKey);\r\n                //使用new Set创建一个对象，达到去重复的效果\r\n                this.keyWordList = [...new Set(this.keyWordList)];\r\n                if (this.keyWordList.length > 6) {\r\n                    //大于六就删除末尾\r\n                    this.keyWordList.pop()\r\n                }\r\n                //存放数据到localStorage\r\n                localStorage.setItem('keyWordList', JSON.stringify(this.keyWordList))\r\n                //导入当前搜索的内容到axios中的函数，然后获取相应的数据\r\n                let res = await getSearchBanner(this.searchKey)\r\n                // 将获取的的数据存入到searchList中\r\n                this.searchList = res.data.result.songs\r\n                // 完成上面的操作后清空\r\n                this.searchKey = '';\r\n            } else {\r\n                alert('請輸入要搜索的內容')\r\n            }\r\n        },\r\n        deleteHistory() {\r\n            //删除本地存储的苏剧\r\n            localStorage.removeItem('keyWordList');\r\n            //重新赋值为空\r\n            this.keyWordList = [];\r\n        },\r\n        async searchHistory(item) {\r\n            //点击历史记录，也会获取相应的歌单数据\r\n            let res = await getSearchBanner(item)\r\n            this.searchList = res.data.result.songs\r\n        },\r\n        updateIndex(item) {\r\n            // 点击搜索结果的歌曲，就会更新vuex中的数据，从而更新底部组件，达到自动播放的效果\r\n            this.$store.commit('pushPlayList', item)\r\n            this.$store.commit('updatePlayListIndex', this.$store.state.playList.length - 1)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n\r\n<style lang=\"less\" scoped>\r\n.searchTop {\r\n    width: 100%;\r\n    height: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    input {\r\n        margin-left: .2rem;\r\n        border: none;\r\n        border-bottom: 1px solid #999;\r\n        width: 90%;\r\n        padding: .1rem;\r\n    }\r\n}\r\n\r\n\r\n.searchHistory {\r\n    width: 100%;\r\n    padding: .2rem;\r\n    position: relative;\r\n\r\n    .searchSpan {\r\n        font-weight: 700;\r\n    }\r\n\r\n\r\n    .spanKey {\r\n        padding: .1rem .2rem;\r\n        background-color: rgb(185, 169, 169);\r\n        border-radius: .4rem;\r\n        margin: .1rem .2rem;\r\n        display: inline-block;\r\n    }\r\n\r\n\r\n    .icon {\r\n        width: .45rem;\r\n        height: .45rem;\r\n        position: absolute;\r\n        right: .2rem;\r\n    }\r\n\r\n}\r\n\r\n.itemList {\r\n\r\n    padding: .24rem;\r\n    margin-top: 12px;\r\n    height: 30rem;\r\n\r\n    .item {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin-top: .16rem;\r\n        margin-bottom: 30px;\r\n\r\n        .itemLeft {\r\n            display: flex;\r\n            align-items: center;\r\n\r\n            .leftSpan {\r\n                margin-right: .3rem;\r\n            }\r\n\r\n            p {\r\n                margin-bottom: 3px;\r\n            }\r\n\r\n\r\n            .singer {\r\n                font-size: 13px;\r\n                color: gray\r\n            }\r\n\r\n        }\r\n\r\n\r\n        .itemRight {\r\n            svg {\r\n                width: 25px;\r\n                height: 25px;\r\n                fill: gray;\r\n\r\n            }\r\n\r\n            .iconbofang {\r\n                margin-right: 20px;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>"],"mappings":";;;EAGaA,KAAK,EAAC;AAAW;gEAGdC,mBAAA,CAAyC;EAApC,YAAU,EAAC;AAAkB;oBAAlCC,UAAyC,C;;EAM5CF,KAAK,EAAC;AAAe;gEACtBC,mBAAA,CAAkC;EAA5BD,KAAK,EAAC;AAAY,GAAC,IAAE;;gEAMvBC,mBAAA,CAAsC;EAAjC,YAAU,EAAC;AAAe;oBAA/BE,UAAsC,C;;EAGzCH,KAAK,EAAC;AAAU;;;EAGHA,KAAK,EAAC;AAAU;;uBAxBtCI,mBAAA,CAmCM,cAlCFC,mBAAA,SAAY,EACZJ,mBAAA,CAOM,OAPNK,UAOM,GANFD,mBAAA,kBAAqB,G,cACrBD,mBAAA,CAEM;IAFDJ,KAAK,EAAC,MAAM;IAAC,aAAW,EAAC,MAAM;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,EAAE;mBAGvDP,mBAAA,0BAA6B,E,gBAC7BJ,mBAAA,CAAqF;IAA9EY,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,OAAO;+DAAUC,KAAA,CAAAC,SAAS,GAAAP,MAAA;IAAGQ,SAAO,EAAAT,MAAA,QAAAA,MAAA,MAAAU,SAAA,KAAAC,IAAA,KAAQC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;iEAAnCJ,KAAA,CAAAC,SAAS,E,KAEzDX,mBAAA,UAAa,EACjBJ,mBAAA,CASM,OATNqB,UASM,GARFC,UAAkC,EAClClB,mBAAA,4BAA+B,G,kBAC/BD,mBAAA,CAEOoB,SAAA,QAAAC,WAAA,CAFcV,KAAA,CAAAW,WAAW,EAAnBC,IAAI;yBAAjBvB,mBAAA,CAEO;MAF4BwB,GAAG,EAAED,IAAI;MAAE3B,KAAK,EAAC,SAAS;MAAEO,OAAK,EAAAE,MAAA,IAAEW,QAAA,CAAAS,aAAa,CAACF,IAAI;wBACjFA,IAAI,wBAAAG,UAAA;iDAEX1B,mBAAA,CAEM;IAFDJ,KAAK,EAAC,MAAM;IAAC,aAAW,EAAC,MAAM;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAW,IAAA,KAAEC,QAAA,CAAAW,aAAA,IAAAX,QAAA,CAAAW,aAAA,IAAAZ,IAAA,CAAa;qBAI9DlB,mBAAA,CAaM,OAbN+B,UAaM,I,kBAZF5B,mBAAA,CAWMoB,SAAA,QAAAC,WAAA,CAXgCV,KAAA,CAAAkB,UAAU,GAAtBN,IAAI,EAAEO,CAAC;yBAAjC9B,mBAAA,CAWM;MAXDJ,KAAK,EAAC,MAAM;MAAkC4B,GAAG,EAAED;QACpD1B,mBAAA,CASM;MATDD,KAAK,EAAC,UAAU;MAAEO,OAAK,EAAAE,MAAA,IAAEW,QAAA,CAAAe,WAAW,CAACR,IAAI;QAC1C1B,mBAAA,CAAyC,QAAzCmC,WAAyC,EAAAC,gBAAA,CAAfH,CAAC,sBAC3BjC,mBAAA,CAMM,cALFA,mBAAA,CAAsB,WAAAoC,gBAAA,CAAhBV,IAAI,CAACW,IAAI,mB,kBACflC,mBAAA,CAGOoB,SAAA,QAAAC,WAAA,CAHsBE,IAAI,CAACY,EAAE,GAAtBC,KAAK,EAAEC,GAAG;2BAAxBrC,mBAAA,CAGO;QAHgCwB,GAAG,EAAEY,KAAK;QAAExC,KAAK,EAAC;0BAClDwC,KAAK,CAACF,IAAI,IAAG,IAChB,GAAAD,gBAAA,CAAGI,GAAG,KAAKd,IAAI,CAACY,EAAE,CAACG,MAAM,mBAAkB,IAC/C"},"metadata":{},"sourceType":"module","externalDependencies":[]}