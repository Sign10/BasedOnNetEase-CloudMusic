{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ItemMusicTop = _resolveComponent(\"ItemMusicTop\");\n  const _component_ItemMusicList = _resolveComponent(\"ItemMusicList\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_ItemMusicTop, {\n    playlist: $setup.state.playlist\n  }, null, 8 /* PROPS */, [\"playlist\"]), _createVNode(_component_ItemMusicList, {\n    itemList: $setup.state.itemList,\n    Count: $setup.state.playlist.subscribedCount\n  }, null, 8 /* PROPS */, [\"itemList\", \"Count\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_ItemMusicTop","playlist","$setup","state","_component_ItemMusicList","itemList","Count","subscribedCount"],"sources":["D:\\桌面\\vue项目\\wangyiyunapp\\src\\views\\ItemMusic.vue"],"sourcesContent":["<template>\r\n    <ItemMusicTop :playlist=\"state.playlist\"/>\r\n    <ItemMusicList :itemList=\"state.itemList\" :Count=\"state.playlist.subscribedCount\" />\r\n</template>\r\n<script>\r\nimport { onMounted,reactive } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport { getMusicItemList ,getItemList} from '@/requests/api/item';\r\nimport ItemMusicTop from '@/components/item/ItemMusicTop'\r\nimport ItemMusicList from '@/components/item/ItemMusicList'\r\n//从这里我导入的是axios中的服务，返回getMusicItemList这个函数\r\n//获取路由的参数或者是数据\r\nexport default {\r\n    setup() {\r\n        const state = reactive({\r\n            playlist: {},\r\n            itemList:[]\r\n        })\r\n        onMounted(async () => {\r\n            //获取到里面的id属性,id为query里的一个属性\r\n            //useRoute的含义,获取传入的id\r\n            let id = useRoute().query.id\r\n            let res = await getMusicItemList(id);\r\n            //这里就是导入了id作为data，这里是获取歌单的信息\r\n            let result = await getItemList(id);\r\n           //这里是获取歌单列表\r\n            state.playlist = res.data.playlist\r\n            //规定state里的playlist接受歌单信息\r\n            state.itemList=result.data.songs\r\n            console.log(state.itemList,'state.itemList');\r\n            // state里面的playlist\r\n            //将数据保存至本地，并转换为JSON格式\r\n            sessionStorage.setItem('itemDetail',JSON.stringify(state))\r\n        })\r\n        return { state }\r\n    },\r\n    components:{\r\n        //子组件\r\n        ItemMusicTop,\r\n        ItemMusicList,\r\n    }\r\n}\r\n</script>"],"mappings":";;;;6DACIA,YAAA,CAA0CC,uBAAA;IAA3BC,QAAQ,EAAEC,MAAA,CAAAC,KAAK,CAACF;yCAC/BF,YAAA,CAAoFK,wBAAA;IAApEC,QAAQ,EAAEH,MAAA,CAAAC,KAAK,CAACE,QAAQ;IAAGC,KAAK,EAAEJ,MAAA,CAAAC,KAAK,CAACF,QAAQ,CAACM"},"metadata":{},"sourceType":"module","externalDependencies":[]}