{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ItemMusicTop = _resolveComponent(\"ItemMusicTop\");\n  const _component_ItemMusicList = _resolveComponent(\"ItemMusicList\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 向头部传入歌单的数据和基本信息 \"), _createVNode(_component_ItemMusicTop, {\n    playlist: $setup.state.playlist\n  }, null, 8 /* PROPS */, [\"playlist\"]), _createCommentVNode(\" 传入传入歌曲的列表和歌单的播放计数 \"), _createVNode(_component_ItemMusicList, {\n    itemList: $setup.state.itemList,\n    Count: $setup.state.playlist.subscribedCount\n  }, null, 8 /* PROPS */, [\"itemList\", \"Count\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createCommentVNode","_createVNode","_component_ItemMusicTop","playlist","$setup","state","_component_ItemMusicList","itemList","Count","subscribedCount"],"sources":["D:\\桌面\\vue项目\\wangyiyunapp\\src\\views\\ItemMusic.vue"],"sourcesContent":["<template>\r\n    <!-- 向头部传入歌单的数据和基本信息 -->\r\n    <ItemMusicTop :playlist=\"state.playlist\"/>\r\n    <!-- 传入传入歌曲的列表和歌单的播放计数 -->\r\n    <ItemMusicList :itemList=\"state.itemList\" :Count=\"state.playlist.subscribedCount\" />\r\n</template>\r\n<script>\r\n//引入方法\r\nimport { onMounted,reactive } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\n//导入axios中封装的函数方法\r\nimport { getMusicItemList ,getItemList} from '@/requests/api/item';\r\n//导入组件\r\nimport ItemMusicTop from '@/components/item/ItemMusicTop'\r\nimport ItemMusicList from '@/components/item/ItemMusicList'\r\nexport default {\r\n    setup() {\r\n        const state = reactive({\r\n            playlist: {},\r\n            itemList:[]\r\n        })\r\n        onMounted(async () => {\r\n            // 使用useRoute方法，获取到传入的数值id\r\n            let id = useRoute().query.id\r\n            //将id传入axios中的函数，异步获取歌单的数据与歌单的歌曲列表\r\n            let res = await getMusicItemList(id);\r\n            let result = await getItemList(id);\r\n\r\n            // 将获取的数据存好\r\n            state.playlist = res.data.playlist\r\n            state.itemList=result.data.songs\r\n\r\n            //将数据保存至，并转换为JSON格式\r\n            sessionStorage.setItem('itemDetail',JSON.stringify(state))\r\n        })\r\n        \r\n        return { state }\r\n    },\r\n    components:{\r\n        //子组件\r\n        ItemMusicTop,\r\n        ItemMusicList,\r\n    }\r\n}\r\n</script>"],"mappings":";;;;6DACIA,mBAAA,qBAAwB,EACxBC,YAAA,CAA0CC,uBAAA;IAA3BC,QAAQ,EAAEC,MAAA,CAAAC,KAAK,CAACF;yCAC/BH,mBAAA,uBAA0B,EAC1BC,YAAA,CAAoFK,wBAAA;IAApEC,QAAQ,EAAEH,MAAA,CAAAC,KAAK,CAACE,QAAQ;IAAGC,KAAK,EAAEJ,MAAA,CAAAC,KAAK,CAACF,QAAQ,CAACM"},"metadata":{},"sourceType":"module","externalDependencies":[]}