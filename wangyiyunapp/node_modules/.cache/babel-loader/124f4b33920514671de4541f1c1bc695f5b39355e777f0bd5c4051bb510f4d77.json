{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport { getSearchBanner } from '@/requests/api/home';\nexport default {\n  data() {\n    return {\n      keyWorldList: [],\n      searchKey: '',\n      searchList: []\n    };\n  },\n  mounted() {\n    this.keyWorldList = JSON.parse(localStorage.getItem('keyWorldList')) || [];\n  },\n  methods: {\n    async enterKey() {\n      if (this.searchKey !== '') {\n        this.keyWorldList.unshift(this.searchKey);\n        this.keyWorldList = [...new Set(this.keyWorldList)];\n        if (this.keyWorldList.length > 6) {\n          this.keyWorldList.pop();\n        }\n        localStorage.setItem('keyWorldList', JSON.stringify(this.keyWorldList));\n        let res = await getSearchBanner(this.searchKey);\n        this.searchList = res.data.result.songs;\n        this.searchKey = '';\n      } else {\n        alert('請輸入要搜索的內容');\n      }\n    },\n    deleteHistory() {\n      localStorage.removeItem('keyWorldList');\n      this.keyWorldList = [];\n    },\n    async searchHistory(item) {\n      let res = await getSearchBanner(item);\n      this.searchList = res.data.result.songs;\n    },\n    updateIndex(item) {}\n  }\n};","map":{"version":3,"names":["getSearchBanner","data","keyWorldList","searchKey","searchList","mounted","JSON","parse","localStorage","getItem","methods","enterKey","unshift","Set","length","pop","setItem","stringify","res","result","songs","alert","deleteHistory","removeItem","searchHistory","item","updateIndex"],"sources":["D:\\桌面\\vue项目\\wangyiyunapp\\src\\views\\SearCh.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"searchTop\">\r\n            <svg class=\"icon\" aria-hidden=\"true\">\r\n                <use xlink:href=\"#icon-zuojiantou\"></use>\r\n            </svg>\r\n            <input type=\"text\" placeholder=\"結束バンド\" v-model=\"searchKey\" @keydown.enter=\"enterKey\">\r\n        </div>\r\n        <div class=\"searchHistory\">\r\n            <span class=\"searchSpan\">历史</span>\r\n\r\n            <span v-for=\"item in keyWorldList\" :key='item' class=\"spanKey\" @click=\"searchHistory(item)\">\r\n                {{ item }}\r\n            </span>\r\n\r\n            <svg class=\"icon\" aria-hidden=\"true\" @click=\"deleteHistory\">\r\n                <use xlink:href=\"#icon-shanchu\"></use>\r\n            </svg>\r\n        </div>\r\n\r\n        <div class=\"itemList\">\r\n            <!-- v-for要结合插值语法来使用 -->\r\n            <div class=\"item\" v-for=\"(item, i) in searchList\" :key=\"item\">\r\n                <div class=\"itemLeft\" @click=\"updateIndex(item)\">\r\n                    <span class=\"leftSpan\">{{ i + 1 }}</span>\r\n                    <!-- 列表 -->\r\n\r\n                    <div>\r\n                        <p>{{ item.name }}</p>\r\n                        <!-- 歌曲名 -->\r\n                        <span v-for=\"(item1, idx) in item.artists\" :key=\"item1\" class=\"singer\">\r\n                            {{ item1.name }}&nbsp;\r\n                            {{ idx === item.artists.length - 1 ? \"\" : '/' }}&nbsp;\r\n                            <!-- 歌手名 -->\r\n                        </span>\r\n\r\n                    </div>\r\n                </div>\r\n                <!-- <div class=\"itemRight\">\r\n                    <svg class=\"iconbofang\" aria-hidden=\"true\" v-if='item.mv != 0'>\r\n                        <use xlink:href=\"#icon-shipin\"></use>\r\n                    </svg>\r\n                    <svg class=\"iconliebiao\" aria-hidden=\"true\">\r\n                        <use xlink:href=\"#icon-31liebiao\"></use>\r\n                    </svg>\r\n                </div> -->\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { getSearchBanner } from '@/requests/api/home'\r\nexport default {\r\n    data() {\r\n        return {\r\n            keyWorldList: [],\r\n            searchKey: '',\r\n            searchList: []\r\n\r\n        }\r\n    },\r\n    mounted() {\r\n        this.keyWorldList = JSON.parse(localStorage.getItem('keyWorldList')) || []\r\n\r\n\r\n\r\n    },\r\n    methods: {\r\n        async enterKey() {\r\n            if (this.searchKey !== '') {\r\n                this.keyWorldList.unshift(this.searchKey);\r\n                this.keyWorldList = [...new Set(this.keyWorldList)];\r\n\r\n                if (this.keyWorldList.length > 6) {\r\n                    this.keyWorldList.pop()\r\n                }\r\n\r\n                localStorage.setItem('keyWorldList', JSON.stringify(this.keyWorldList))\r\n                let res = await getSearchBanner(this.searchKey)\r\n                this.searchList = res.data.result.songs\r\n\r\n                this.searchKey = '';\r\n            } else {\r\n                alert('請輸入要搜索的內容')\r\n            }\r\n        },\r\n        deleteHistory() {\r\n            localStorage.removeItem('keyWorldList');\r\n            this.keyWorldList = [];\r\n        },\r\n        async searchHistory(item) {\r\n            let res = await getSearchBanner(item)\r\n            this.searchList = res.data.result.songs\r\n        },\r\n        updateIndex(item){\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n\r\n\r\n\r\n<style lang=\"less\" scoped>\r\n.searchTop {\r\n    width: 100%;\r\n    height: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    input {\r\n        margin-left: .2rem;\r\n        border: none;\r\n        border-bottom: 1px solid #999;\r\n        width: 90%;\r\n        padding: .1rem;\r\n    }\r\n}\r\n\r\n\r\n.searchHistory {\r\n    width: 100%;\r\n    padding: .2rem;\r\n    position: relative;\r\n\r\n    .searchSpan {\r\n        font-weight: 700;\r\n    }\r\n\r\n\r\n    .spanKey {\r\n        padding: .1rem .2rem;\r\n        background-color: rgb(185, 169, 169);\r\n        border-radius: .4rem;\r\n        margin: .1rem .2rem;\r\n        display: inline-block;\r\n    }\r\n\r\n\r\n    .icon {\r\n        width: .45rem;\r\n        height: .45rem;\r\n        position: absolute;\r\n        right: .2rem;\r\n    }\r\n\r\n}\r\n\r\n.itemList {\r\n\r\n    padding: .24rem;\r\n    margin-top: 12px;\r\n    height: 30rem;\r\n    .item {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin-top: .16rem;\r\n        margin-bottom: 30px;\r\n\r\n        .itemLeft {\r\n            display: flex;\r\n            align-items: center;\r\n\r\n            .leftSpan {\r\n                margin-right: .3rem;\r\n            }\r\n\r\n            p {\r\n                margin-bottom: 3px;\r\n            }\r\n\r\n\r\n            .singer {\r\n                font-size: 13px;\r\n                color: gray\r\n            }\r\n\r\n        }\r\n\r\n\r\n        .itemRight {\r\n            svg {\r\n                width: 25px;\r\n                height: 25px;\r\n                fill: gray;\r\n\r\n            }\r\n\r\n            .iconbofang {\r\n                margin-right: 20px;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>"],"mappings":";AAuDA,SAASA,eAAc,QAAS,qBAAoB;AACpD,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE;IAEhB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACH,YAAW,GAAII,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,KAAK,EAAC;EAI7E,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,QAAQA,CAAA,EAAG;MACb,IAAI,IAAI,CAACR,SAAQ,KAAM,EAAE,EAAE;QACvB,IAAI,CAACD,YAAY,CAACU,OAAO,CAAC,IAAI,CAACT,SAAS,CAAC;QACzC,IAAI,CAACD,YAAW,GAAI,CAAC,GAAG,IAAIW,GAAG,CAAC,IAAI,CAACX,YAAY,CAAC,CAAC;QAEnD,IAAI,IAAI,CAACA,YAAY,CAACY,MAAK,GAAI,CAAC,EAAE;UAC9B,IAAI,CAACZ,YAAY,CAACa,GAAG,EAAC;QAC1B;QAEAP,YAAY,CAACQ,OAAO,CAAC,cAAc,EAAEV,IAAI,CAACW,SAAS,CAAC,IAAI,CAACf,YAAY,CAAC;QACtE,IAAIgB,GAAE,GAAI,MAAMlB,eAAe,CAAC,IAAI,CAACG,SAAS;QAC9C,IAAI,CAACC,UAAS,GAAIc,GAAG,CAACjB,IAAI,CAACkB,MAAM,CAACC,KAAI;QAEtC,IAAI,CAACjB,SAAQ,GAAI,EAAE;MACvB,OAAO;QACHkB,KAAK,CAAC,WAAW;MACrB;IACJ,CAAC;IACDC,aAAaA,CAAA,EAAG;MACZd,YAAY,CAACe,UAAU,CAAC,cAAc,CAAC;MACvC,IAAI,CAACrB,YAAW,GAAI,EAAE;IAC1B,CAAC;IACD,MAAMsB,aAAaA,CAACC,IAAI,EAAE;MACtB,IAAIP,GAAE,GAAI,MAAMlB,eAAe,CAACyB,IAAI;MACpC,IAAI,CAACrB,UAAS,GAAIc,GAAG,CAACjB,IAAI,CAACkB,MAAM,CAACC,KAAI;IAC1C,CAAC;IACDM,WAAWA,CAACD,IAAI,EAAC,CAEjB;EAEJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}