{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-87535efc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"searchTop\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", {\n  class: \"icon\",\n  \"aria-hidden\": \"true\"\n}, [/*#__PURE__*/_createElementVNode(\"use\", {\n  \"xlink:href\": \"#icon-zuojiantou\"\n})], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"searchHistory\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"searchSpan\"\n}, \"历史\", -1 /* HOISTED */));\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"use\", {\n  \"xlink:href\": \"#icon-shanchu\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_7 = [_hoisted_6];\nconst _hoisted_8 = {\n  class: \"itemList\"\n};\nconst _hoisted_9 = {\n  class: \"itemLeft\"\n};\nconst _hoisted_10 = {\n  class: \"leftSpan\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"結束バンド\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchKey = $event),\n    onKeydown: _cache[1] || (_cache[1] = _withKeys((...args) => $options.enterKey && $options.enterKey(...args), [\"enter\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.searchKey]])]), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.keyWorldList, item => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: item,\n      class: \"spanKey\",\n      onClick: $event => $options.searchHistory(item)\n    }, _toDisplayString(item), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(), _createElementBlock(\"svg\", {\n    class: \"icon\",\n    \"aria-hidden\": \"true\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.deleteHistory && $options.deleteHistory(...args))\n  }, _hoisted_7))]), _createElementVNode(\"div\", _hoisted_8, [_createCommentVNode(\" v-for要结合插值语法来使用 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.searchList, (item, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"item\",\n      key: item\n    }, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", _hoisted_10, _toDisplayString(i + 1), 1 /* TEXT */), _createCommentVNode(\" 列表 \"), _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, _toDisplayString(item.name), 1 /* TEXT */), _createCommentVNode(\" 歌曲名 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.artists, (item1, idx) => {\n      return _openBlock(), _createElementBlock(\"span\", {\n        key: item1,\n        class: \"singer\"\n      }, [_createTextVNode(_toDisplayString(item1.name) + \"  \" + _toDisplayString(idx === item.artists.length - 1 ? \"\" : '/') + \"  \", 1 /* TEXT */), _createCommentVNode(\" 歌手名 \")]);\n    }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" <div class=\\\"itemRight\\\">\\r\\n                    <svg class=\\\"iconbofang\\\" aria-hidden=\\\"true\\\" v-if='item.mv != 0'>\\r\\n                        <use xlink:href=\\\"#icon-shipin\\\"></use>\\r\\n                    </svg>\\r\\n                    <svg class=\\\"iconliebiao\\\" aria-hidden=\\\"true\\\">\\r\\n                        <use xlink:href=\\\"#icon-31liebiao\\\"></use>\\r\\n                    </svg>\\r\\n                </div> \")]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_6","_createElementBlock","_hoisted_1","_hoisted_2","type","placeholder","$data","searchKey","$event","onKeydown","_cache","_withKeys","args","$options","enterKey","_hoisted_3","_hoisted_4","_Fragment","_renderList","keyWorldList","item","key","onClick","searchHistory","_hoisted_5","deleteHistory","_hoisted_8","_createCommentVNode","searchList","i","_hoisted_9","_hoisted_10","_toDisplayString","name","artists","item1","idx","length"],"sources":["D:\\桌面\\vue项目\\wangyiyunapp\\src\\views\\SearCh.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"searchTop\">\r\n            <svg class=\"icon\" aria-hidden=\"true\">\r\n                <use xlink:href=\"#icon-zuojiantou\"></use>\r\n            </svg>\r\n            <input type=\"text\" placeholder=\"結束バンド\" v-model=\"searchKey\" @keydown.enter=\"enterKey\">\r\n        </div>\r\n        <div class=\"searchHistory\">\r\n            <span class=\"searchSpan\">历史</span>\r\n\r\n            <span v-for=\"item in keyWorldList\" :key='item' class=\"spanKey\" @click=\"searchHistory(item)\">\r\n                {{ item }}\r\n            </span>\r\n\r\n            <svg class=\"icon\" aria-hidden=\"true\" @click=\"deleteHistory\">\r\n                <use xlink:href=\"#icon-shanchu\"></use>\r\n            </svg>\r\n        </div>\r\n\r\n        <div class=\"itemList\">\r\n            <!-- v-for要结合插值语法来使用 -->\r\n            <div class=\"item\" v-for=\"(item, i) in searchList\" :key=\"item\">\r\n                <div class=\"itemLeft\">\r\n                    <span class=\"leftSpan\">{{ i + 1 }}</span>\r\n                    <!-- 列表 -->\r\n\r\n                    <div>\r\n                        <p>{{ item.name }}</p>\r\n                        <!-- 歌曲名 -->\r\n                        <span v-for=\"(item1, idx) in item.artists\" :key=\"item1\" class=\"singer\">\r\n                            {{ item1.name }}&nbsp;\r\n                            {{ idx === item.artists.length - 1 ? \"\" : '/' }}&nbsp;\r\n                            <!-- 歌手名 -->\r\n                        </span>\r\n\r\n                    </div>\r\n                </div>\r\n                <!-- <div class=\"itemRight\">\r\n                    <svg class=\"iconbofang\" aria-hidden=\"true\" v-if='item.mv != 0'>\r\n                        <use xlink:href=\"#icon-shipin\"></use>\r\n                    </svg>\r\n                    <svg class=\"iconliebiao\" aria-hidden=\"true\">\r\n                        <use xlink:href=\"#icon-31liebiao\"></use>\r\n                    </svg>\r\n                </div> -->\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { getSearchBanner } from '@/requests/api/home'\r\nexport default {\r\n    data() {\r\n        return {\r\n            keyWorldList: [],\r\n            searchKey: '',\r\n            searchList: []\r\n\r\n        }\r\n    },\r\n    mounted() {\r\n        this.keyWorldList = JSON.parse(localStorage.getItem('keyWorldList')) || []\r\n\r\n\r\n\r\n    },\r\n    methods: {\r\n        async enterKey() {\r\n            if (this.searchKey !== '') {\r\n                this.keyWorldList.unshift(this.searchKey);\r\n                this.keyWorldList = [...new Set(this.keyWorldList)];\r\n\r\n                if (this.keyWorldList.length > 6) {\r\n                    this.keyWorldList.pop()\r\n                }\r\n\r\n                localStorage.setItem('keyWorldList', JSON.stringify(this.keyWorldList))\r\n                let res = await getSearchBanner(this.searchKey)\r\n                this.searchList = res.data.result.songs\r\n\r\n                this.searchKey = '';\r\n            } else {\r\n                alert('請輸入要搜索的內容')\r\n            }\r\n        },\r\n        deleteHistory() {\r\n            localStorage.removeItem('keyWorldList');\r\n            this.keyWorldList = [];\r\n        },\r\n        async searchHistory(item) {\r\n            let res = await getSearchBanner(item)\r\n            this.searchList = res.data.result.songs\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n\r\n\r\n\r\n<style lang=\"less\" scoped>\r\n.searchTop {\r\n    width: 100%;\r\n    height: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    input {\r\n        margin-left: .2rem;\r\n        border: none;\r\n        border-bottom: 1px solid #999;\r\n        width: 90%;\r\n        padding: .1rem;\r\n    }\r\n}\r\n\r\n\r\n.searchHistory {\r\n    width: 100%;\r\n    padding: .2rem;\r\n    position: relative;\r\n\r\n    .searchSpan {\r\n        font-weight: 700;\r\n    }\r\n\r\n\r\n    .spanKey {\r\n        padding: .1rem .2rem;\r\n        background-color: rgb(185, 169, 169);\r\n        border-radius: .4rem;\r\n        margin: .1rem .2rem;\r\n        display: inline-block;\r\n    }\r\n\r\n\r\n    .icon {\r\n        width: .45rem;\r\n        height: .45rem;\r\n        position: absolute;\r\n        right: .2rem;\r\n    }\r\n\r\n}\r\n\r\n.itemList {\r\n\r\n    padding: .24rem;\r\n    margin-top: 12px;\r\n    height: 30rem;\r\n    .item {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin-top: .16rem;\r\n        margin-bottom: 30px;\r\n\r\n        .itemLeft {\r\n            display: flex;\r\n            align-items: center;\r\n\r\n            .leftSpan {\r\n                margin-right: .3rem;\r\n            }\r\n\r\n            p {\r\n                margin-bottom: 3px;\r\n            }\r\n\r\n\r\n            .singer {\r\n                font-size: 13px;\r\n                color: gray\r\n            }\r\n\r\n        }\r\n\r\n\r\n        .itemRight {\r\n            svg {\r\n                width: 25px;\r\n                height: 25px;\r\n                fill: gray;\r\n\r\n            }\r\n\r\n            .iconbofang {\r\n                margin-right: 20px;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>"],"mappings":";;;EAEaA,KAAK,EAAC;AAAW;gEAClBC,mBAAA,CAEM;EAFDD,KAAK,EAAC,MAAM;EAAC,aAAW,EAAC;iBAC1BC,mBAAA,CAAyC;EAApC,YAAU,EAAC;AAAkB,G;;EAIrCD,KAAK,EAAC;AAAe;gEACtBC,mBAAA,CAAkC;EAA5BD,KAAK,EAAC;AAAY,GAAC,IAAE;;gEAOvBC,mBAAA,CAAsC;EAAjC,YAAU,EAAC;AAAe;oBAA/BC,UAAsC,C;;EAIzCF,KAAK,EAAC;AAAU;;EAGRA,KAAK,EAAC;AAAU;;EACXA,KAAK,EAAC;AAAU;;uBAvBtCG,mBAAA,CAiDM,cAhDFF,mBAAA,CAKM,OALNG,UAKM,GAJFC,UAEM,E,gBACNJ,mBAAA,CAAqF;IAA9EK,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,OAAO;+DAAUC,KAAA,CAAAC,SAAS,GAAAC,MAAA;IAAGC,SAAO,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;iEAAnCN,KAAA,CAAAC,SAAS,E,KAE7DR,mBAAA,CAUM,OAVNgB,UAUM,GATFC,UAAkC,G,kBAElCf,mBAAA,CAEOgB,SAAA,QAAAC,WAAA,CAFcZ,KAAA,CAAAa,YAAY,EAApBC,IAAI;yBAAjBnB,mBAAA,CAEO;MAF6BoB,GAAG,EAAED,IAAI;MAAEtB,KAAK,EAAC,SAAS;MAAEwB,OAAK,EAAAd,MAAA,IAAEK,QAAA,CAAAU,aAAa,CAACH,IAAI;wBAClFA,IAAI,wBAAAI,UAAA;iDAGXvB,mBAAA,CAEM;IAFDH,KAAK,EAAC,MAAM;IAAC,aAAW,EAAC,MAAM;IAAEwB,OAAK,EAAAZ,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAY,aAAA,IAAAZ,QAAA,CAAAY,aAAA,IAAAb,IAAA,CAAa;qBAK9Db,mBAAA,CA6BM,OA7BN2B,UA6BM,GA5BFC,mBAAA,qBAAwB,G,kBACxB1B,mBAAA,CAyBMgB,SAAA,QAAAC,WAAA,CAzBgCZ,KAAA,CAAAsB,UAAU,GAAtBR,IAAI,EAAES,CAAC;yBAAjC5B,mBAAA,CAyBM;MAzBDH,KAAK,EAAC,MAAM;MAAkCuB,GAAG,EAAED;QACpDrB,mBAAA,CAcM,OAdN+B,UAcM,GAbF/B,mBAAA,CAAyC,QAAzCgC,WAAyC,EAAAC,gBAAA,CAAfH,CAAC,sBAC3BF,mBAAA,QAAW,EAEX5B,mBAAA,CASM,cARFA,mBAAA,CAAsB,WAAAiC,gBAAA,CAAhBZ,IAAI,CAACa,IAAI,kBACfN,mBAAA,SAAY,G,kBACZ1B,mBAAA,CAIOgB,SAAA,QAAAC,WAAA,CAJsBE,IAAI,CAACc,OAAO,GAA3BC,KAAK,EAAEC,GAAG;2BAAxBnC,mBAAA,CAIO;QAJqCoB,GAAG,EAAEc,KAAK;QAAErC,KAAK,EAAC;4CACvDqC,KAAK,CAACF,IAAI,IAAG,IAChB,GAAAD,gBAAA,CAAGI,GAAG,KAAKhB,IAAI,CAACc,OAAO,CAACG,MAAM,mBAAkB,IAChD,iBAAAV,mBAAA,SAAY,C;wCAKxBA,mBAAA,iaAOU,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}