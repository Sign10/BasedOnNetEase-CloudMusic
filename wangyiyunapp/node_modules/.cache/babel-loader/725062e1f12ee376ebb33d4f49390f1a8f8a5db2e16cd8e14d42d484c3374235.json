{"ast":null,"code":"import { mapMutations, mapState } from 'vuex';\nimport { ref } from 'vue';\nimport MusicDetail from '@/components/item/MusicDetail.vue';\nexport default {\n  setup() {\n    const show = ref(false);\n    const showPopup = () => {\n      show.value = true;\n    };\n    return {\n      show,\n      showPopup\n    };\n  },\n  data() {\n    return {\n      setInter: 0\n    };\n  },\n  mounted() {\n    this.$store.dispatch('getLyric', this.playList[this.playListIndex].id);\n  },\n  computed: {\n    ...mapState(['playList', 'playListIndex', 'isbtnShow', 'songlistmore'])\n  },\n  updated() {\n    this.$store.dispatch('getLyric', this.playList[this.playListIndex].id), this.addDuration();\n  },\n  methods: {\n    play() {\n      if (this.$refs.audio.paused) {\n        this.$refs.audio.play();\n        this.updateIsbtnShow(false);\n        this.updateTime();\n      } else {\n        this.$refs.audio.pause();\n        this.updateIsbtnShow(true);\n        clearInterval(this.setInter);\n      }\n    },\n    addDuration() {\n      this.updateDuration(this.$refs.audio.duration);\n    },\n    showPopups() {\n      this.updatesonglistmore();\n    },\n    updateTime() {\n      this.setInter = setInterval(() => {\n        this.updateCurrentTime(this.$refs.audio.currentTime);\n      }, 500);\n    },\n    ...mapMutations(['updateIsbtnShow', 'updatesonglistmore', 'updateCurrentTime', 'updateDuration'])\n  },\n  watch: {\n    playListIndex() {\n      this.$refs.audio.autoplay = true;\n      // this.updateTime()\n      console.log('index變化了');\n      if (this.$refs.audio.paused) {\n        this.updateIsbtnShow(false);\n      }\n    },\n    playList() {\n      console.log('歌單變化了');\n      // this.updateTime()  //監聽index的變化\n      if (this.isbtnShow) {\n        this.updateIsbtnShow(false);\n        this.$refs.audio.autoplay = true;\n      }\n    }\n  },\n  components: {\n    MusicDetail\n  }\n};","map":{"version":3,"names":["mapMutations","mapState","ref","MusicDetail","setup","show","showPopup","value","data","setInter","mounted","$store","dispatch","playList","playListIndex","id","computed","updated","addDuration","methods","play","$refs","audio","paused","updateIsbtnShow","updateTime","pause","clearInterval","updateDuration","duration","showPopups","updatesonglistmore","setInterval","updateCurrentTime","currentTime","watch","autoplay","console","log","isbtnShow","components"],"sources":["D:\\桌面\\vue项目\\wangyiyunapp\\src\\components\\item\\FooterMusic.vue"],"sourcesContent":["<template>\r\n    <div class=\"FooterMusic\">\r\n        <!-- 底部音乐组件的左侧，点击会调用updatesonglistmore函数 -->\r\n        <div class=\"footerLeft\" @click=\"updatesonglistmore\">\r\n            <img :src=\"playList[playListIndex].al.picUrl\" alt=\"\">\r\n            <div>\r\n                <p>{{ playList[playListIndex].name }}</p>\r\n                <span>横滑切换上下首噢</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"footerRight\">\r\n            <svg class=\"icon3\" aria-hidden=\"true\" @click=\"play\" v-if=\"isbtnShow\">\r\n                <use xlink:href=\"#icon-bofanganniu\"></use>\r\n            </svg>\r\n            <svg class=\"icon3\" aria-hidden=\"true\" @click=\"play\" v-else>\r\n                <use xlink:href=\"#icon-weibiaoti--\"></use>\r\n            </svg>\r\n            <svg class=\"icon3\" aria-hidden=\"true\">\r\n                <use xlink:href=\"#icon-zu\"></use>\r\n            </svg>\r\n        </div>\r\n        <audio ref=\"audio\" :src=\"`https://music.163.com/song/media/outer/url?id=${playList[playListIndex].id}.mp3`\"></audio>\r\n        <van-popup v-model:show=\"songlistmore\" position=\"right\" :style=\"{ width: '100%', height: '100%' }\">\r\n            <MusicDetail :musiclist=\"playList[playListIndex]\" :isbtnShow=\"isbtnShow\" :play=\"play\"\r\n                :addDuration=\"addDuration\" />\r\n        </van-popup>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations, mapState } from 'vuex';\r\nimport { ref } from 'vue'\r\n\r\nimport MusicDetail from '@/components/item/MusicDetail.vue'\r\n\r\nexport default {\r\n    setup() {\r\n        const show = ref(false);\r\n        const showPopup = () => {\r\n            show.value = true\r\n        }\r\n        return { show, showPopup }\r\n    },\r\n    data() {\r\n        return {\r\n            setInter: 0\r\n        }\r\n    },\r\n    mounted() {\r\n        this.$store.dispatch('getLyric', this.playList[this.playListIndex].id)\r\n    },\r\n    computed: {\r\n        ...mapState(['playList', 'playListIndex', 'isbtnShow', 'songlistmore'])\r\n    },\r\n    updated() {\r\n        this.$store.dispatch('getLyric', this.playList[this.playListIndex].id),\r\n            this.addDuration()\r\n    },\r\n    methods: {\r\n        play() {\r\n            if (this.$refs.audio.paused) {\r\n                this.$refs.audio.play()\r\n                this.updateIsbtnShow(false)\r\n                this.updateTime()\r\n            }\r\n            else {\r\n                this.$refs.audio.pause()\r\n                this.updateIsbtnShow(true)\r\n                clearInterval(this.setInter)\r\n            }\r\n        },\r\n        addDuration() {\r\n            this.updateDuration(this.$refs.audio.duration)\r\n        },\r\n        showPopups() {\r\n            this.updatesonglistmore()\r\n        },\r\n        updateTime() {\r\n            this.setInter = setInterval(() => {\r\n                this.updateCurrentTime(this.$refs.audio.currentTime)\r\n            }, 500)\r\n        },\r\n        ...mapMutations(['updateIsbtnShow', 'updatesonglistmore', 'updateCurrentTime', 'updateDuration'])\r\n\r\n    },\r\n    watch: {\r\n        playListIndex() {\r\n            this.$refs.audio.autoplay = true;\r\n            // this.updateTime()\r\n            console.log('index變化了');\r\n            if (this.$refs.audio.paused) {\r\n                this.updateIsbtnShow(false)\r\n            }\r\n        },\r\n        playList() {\r\n            console.log('歌單變化了');\r\n            // this.updateTime()  //監聽index的變化\r\n            if (this.isbtnShow) {\r\n                this.updateIsbtnShow(false)\r\n                this.$refs.audio.autoplay = true\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n        MusicDetail\r\n    }\r\n\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.FooterMusic {\r\n    width: 100%;\r\n    height: 1.4rem;\r\n    background-color: white;\r\n    position: fixed;\r\n    bottom: 0;\r\n    border-top: 1px solid #999;\r\n    display: flex;\r\n    padding: 0.2rem;\r\n    justify-content: space-between;\r\n\r\n    .footerLeft {\r\n        width: 79%;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        img {\r\n            width: 1rem;\r\n            height: 1rem;\r\n            border-radius: 50%;\r\n            margin-right: 11px;\r\n        }\r\n\r\n        span {\r\n            font-size: 13px;\r\n            color: #999;\r\n        }\r\n    }\r\n\r\n    .footerRight {\r\n        width: 18%;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        .icon3 {\r\n            width: 29px;\r\n            height: 29px;\r\n        }\r\n    }\r\n}\r\n</style>"],"mappings":"AA8BA,SAASA,YAAY,EAAEC,QAAO,QAAS,MAAM;AAC7C,SAASC,GAAE,QAAS,KAAI;AAExB,OAAOC,WAAU,MAAO,mCAAkC;AAE1D,eAAe;EACXC,KAAKA,CAAA,EAAG;IACJ,MAAMC,IAAG,GAAIH,GAAG,CAAC,KAAK,CAAC;IACvB,MAAMI,SAAQ,GAAIA,CAAA,KAAM;MACpBD,IAAI,CAACE,KAAI,GAAI,IAAG;IACpB;IACA,OAAO;MAAEF,IAAI;MAAEC;IAAU;EAC7B,CAAC;EACDE,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACC,aAAa,CAAC,CAACC,EAAE;EACzE,CAAC;EACDC,QAAQ,EAAE;IACN,GAAGf,QAAQ,CAAC,CAAC,UAAU,EAAE,eAAe,EAAE,WAAW,EAAE,cAAc,CAAC;EAC1E,CAAC;EACDgB,OAAOA,CAAA,EAAG;IACN,IAAI,CAACN,MAAM,CAACC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACC,aAAa,CAAC,CAACC,EAAE,CAAC,EAClE,IAAI,CAACG,WAAW,EAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACLC,IAAIA,CAAA,EAAG;MACH,IAAI,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAM,EAAE;QACzB,IAAI,CAACF,KAAK,CAACC,KAAK,CAACF,IAAI,EAAC;QACtB,IAAI,CAACI,eAAe,CAAC,KAAK;QAC1B,IAAI,CAACC,UAAU,EAAC;MACpB,OACK;QACD,IAAI,CAACJ,KAAK,CAACC,KAAK,CAACI,KAAK,EAAC;QACvB,IAAI,CAACF,eAAe,CAAC,IAAI;QACzBG,aAAa,CAAC,IAAI,CAAClB,QAAQ;MAC/B;IACJ,CAAC;IACDS,WAAWA,CAAA,EAAG;MACV,IAAI,CAACU,cAAc,CAAC,IAAI,CAACP,KAAK,CAACC,KAAK,CAACO,QAAQ;IACjD,CAAC;IACDC,UAAUA,CAAA,EAAG;MACT,IAAI,CAACC,kBAAkB,EAAC;IAC5B,CAAC;IACDN,UAAUA,CAAA,EAAG;MACT,IAAI,CAAChB,QAAO,GAAIuB,WAAW,CAAC,MAAM;QAC9B,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACZ,KAAK,CAACC,KAAK,CAACY,WAAW;MACvD,CAAC,EAAE,GAAG;IACV,CAAC;IACD,GAAGlC,YAAY,CAAC,CAAC,iBAAiB,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,gBAAgB,CAAC;EAEpG,CAAC;EACDmC,KAAK,EAAE;IACHrB,aAAaA,CAAA,EAAG;MACZ,IAAI,CAACO,KAAK,CAACC,KAAK,CAACc,QAAO,GAAI,IAAI;MAChC;MACAC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvB,IAAI,IAAI,CAACjB,KAAK,CAACC,KAAK,CAACC,MAAM,EAAE;QACzB,IAAI,CAACC,eAAe,CAAC,KAAK;MAC9B;IACJ,CAAC;IACDX,QAAQA,CAAA,EAAG;MACPwB,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpB;MACA,IAAI,IAAI,CAACC,SAAS,EAAE;QAChB,IAAI,CAACf,eAAe,CAAC,KAAK;QAC1B,IAAI,CAACH,KAAK,CAACC,KAAK,CAACc,QAAO,GAAI,IAAG;MACnC;IACJ;EACJ,CAAC;EACDI,UAAU,EAAE;IACRrC;EACJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}