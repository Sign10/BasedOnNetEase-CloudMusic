{"ast":null,"code":"import { onMounted, reactive } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { getMusicItemList, getItemList } from '@/requests/api/item';\n//上面是导入axios的方法\n//下面是引入组件\nimport ItemMusicTop from '@/components/item/ItemMusicTop';\nimport ItemMusicList from '@/components/item/ItemMusicList';\n//引入子组件\n//从这里我导入的是axios中的服务，返回getMusicItemList这个函数\n//获取路由的参数或者是数据\n\nexport default {\n  setup() {\n    //响应式对象\n    const state = reactive({\n      playlist: {},\n      itemList: []\n    });\n    onMounted(async () => {\n      //获取到里面的id属性,id为query里的一个属性\n      //useRoute的含义,获取传入的id\n      let id = useRoute().query.id;\n      let res = await getMusicItemList(id);\n      //这里就是导入了id作为data，这里是获取歌单的信息\n      let result = await getItemList(id);\n      //这里是获取歌单列表\n      state.playlist = res.data.playlist;\n      //规定state里的playlist接受歌单信息\n      state.itemList = result.data.songs;\n      console.log(state.itemList, 'state.itemList');\n      // state里面的playlist\n      //将数据保存至本地，并转换为JSON格式\n      sessionStorage.setItem('itemDetail', JSON.stringify(state));\n    });\n    return {\n      state\n    };\n  },\n  components: {\n    //子组件\n    ItemMusicTop,\n    ItemMusicList\n  }\n};","map":{"version":3,"names":["onMounted","reactive","useRoute","getMusicItemList","getItemList","ItemMusicTop","ItemMusicList","setup","state","playlist","itemList","id","query","res","result","data","songs","console","log","sessionStorage","setItem","JSON","stringify","components"],"sources":["D:\\桌面\\vue项目\\wangyiyunapp\\src\\views\\ItemMusic.vue"],"sourcesContent":["<template>\r\n    <!-- 这个是view，视图 -->\r\n    <ItemMusicTop :playlist=\"state.playlist\"/>\r\n    <!-- 这是歌单详细页的view -->\r\n    <!-- 向子组件中传入了Playlist这个数据 -->\r\n    <ItemMusicList :itemList=\"state.itemList\" :Count=\"state.playlist.subscribedCount\" />\r\n</template>\r\n<script>\r\nimport { onMounted,reactive } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport { getMusicItemList ,getItemList} from '@/requests/api/item';\r\n//上面是导入axios的方法\r\n//下面是引入组件\r\nimport ItemMusicTop from '@/components/item/ItemMusicTop'\r\nimport ItemMusicList from '@/components/item/ItemMusicList'\r\n//引入子组件\r\n//从这里我导入的是axios中的服务，返回getMusicItemList这个函数\r\n//获取路由的参数或者是数据\r\n\r\nexport default {\r\n    setup() {\r\n        //响应式对象\r\n        const state = reactive({\r\n            playlist: {\r\n            },\r\n\r\n            itemList:[]\r\n        })\r\n        onMounted(async () => {\r\n            //获取到里面的id属性,id为query里的一个属性\r\n            //useRoute的含义,获取传入的id\r\n            let id = useRoute().query.id\r\n            let res = await getMusicItemList(id);\r\n            //这里就是导入了id作为data，这里是获取歌单的信息\r\n            let result = await getItemList(id);\r\n           //这里是获取歌单列表\r\n            state.playlist = res.data.playlist\r\n            //规定state里的playlist接受歌单信息\r\n            state.itemList=result.data.songs\r\n            console.log(state.itemList,'state.itemList');\r\n            // state里面的playlist\r\n            //将数据保存至本地，并转换为JSON格式\r\n            sessionStorage.setItem('itemDetail',JSON.stringify(state))\r\n        })\r\n        return { state }\r\n    },\r\n\r\n    components:{\r\n        //子组件\r\n        ItemMusicTop,\r\n        ItemMusicList,\r\n    }\r\n}\r\n\r\n\r\n\r\n</script>"],"mappings":"AAQA,SAASA,SAAS,EAACC,QAAO,QAAS,KAAK;AACxC,SAASC,QAAO,QAAS,YAAY;AACrC,SAASC,gBAAe,EAAGC,WAAW,QAAO,qBAAqB;AAClE;AACA;AACA,OAAOC,YAAW,MAAO,gCAA+B;AACxD,OAAOC,aAAY,MAAO,iCAAgC;AAC1D;AACA;AACA;;AAEA,eAAe;EACXC,KAAKA,CAAA,EAAG;IACJ;IACA,MAAMC,KAAI,GAAIP,QAAQ,CAAC;MACnBQ,QAAQ,EAAE,CACV,CAAC;MAEDC,QAAQ,EAAC;IACb,CAAC;IACDV,SAAS,CAAC,YAAY;MAClB;MACA;MACA,IAAIW,EAAC,GAAIT,QAAQ,EAAE,CAACU,KAAK,CAACD,EAAC;MAC3B,IAAIE,GAAE,GAAI,MAAMV,gBAAgB,CAACQ,EAAE,CAAC;MACpC;MACA,IAAIG,MAAK,GAAI,MAAMV,WAAW,CAACO,EAAE,CAAC;MACnC;MACCH,KAAK,CAACC,QAAO,GAAII,GAAG,CAACE,IAAI,CAACN,QAAO;MACjC;MACAD,KAAK,CAACE,QAAQ,GAACI,MAAM,CAACC,IAAI,CAACC,KAAI;MAC/BC,OAAO,CAACC,GAAG,CAACV,KAAK,CAACE,QAAQ,EAAC,gBAAgB,CAAC;MAC5C;MACA;MACAS,cAAc,CAACC,OAAO,CAAC,YAAY,EAACC,IAAI,CAACC,SAAS,CAACd,KAAK,CAAC;IAC7D,CAAC;IACD,OAAO;MAAEA;IAAM;EACnB,CAAC;EAEDe,UAAU,EAAC;IACP;IACAlB,YAAY;IACZC;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}